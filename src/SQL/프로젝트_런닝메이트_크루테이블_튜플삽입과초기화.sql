-- 크루테이블 삽입 --
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00001',null,null,'미래의 달리기',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00002',null,null,'런더풋 즐거움',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00003',null,null,'스피디 러너스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00004',null,null,'편안한 페이스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00005',null,null,'스트라이드 모션',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00006',null,null,'목적을 향한 발걸음',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00007',null,null,'경주의 길',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00008',null,null,'러닝 리그',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00009',null,null,'마라톤 메이트스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00010',null,null,'피트 피니시라인',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00011',null,null,'달리는 즐거움',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00012',null,null,'스피드 스텝',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00013',null,null,'힐 앤 플레이스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00014',null,null,'러닝 레지던츠',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00015',null,null,'레이스 러너스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00016',null,null,'에너지 스프린트',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00017',null,null,'달리는 친구들',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00018',null,null,'스피디 트랙',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00019',null,null,'롱런 러너스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00020',null,null,'트레일 트랙커스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00021',null,null,'런더선',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00022',null,null,'달려라 동지',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00023',null,null,'스텝 바이 스텝',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00024',null,null,'피트니스 풋팅',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00025',null,null,'러닝 브레이크',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00026',null,null,'목적 달성 런',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00027',null,null,'스트라이드 스토리',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00028',null,null,'피트 트랙커스',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00029',null,null,'건강한 발걸음',null,0,0,16,0);
Insert into RM."크루" ("크루ID","개설자","크루장","크루명","활동지역","인원수","마일리지","등급","총달린거리") values ('CREW00030',null,null,'달리는 세대',null,0,0,16,0);

set serveroutput on;

create or replace function FUNC_GET_LARGE_ADDR(addr varchar2) return varchar2
as
    res varchar2(60);
    idx number(38) := 1;
    sp_pos number(38);
begin
    dbms_output.put_line('hello');
    while idx < length(addr) loop
        sp_pos := instr(addr, ' ', idx);
        if sp_pos > 0 then
            begin
                res := res || substr(addr, idx, sp_pos - idx) || ' ';
                idx := sp_pos + 1;
            end;
        else
            return trim(res);
        end if;
    end loop;
end;

create or replace procedure PROC_REGISTER_CREW_LEADER_INIT as
    v_random_leader 회원.회원ID%TYPE;
    v_leader_addr 회원.거주지%TYPE;
    i number(38);
    num_of_rows number(38);
    
    CURSOR c_crew is select 크루ID, 크루명 from 크루 where 개설자 is null;
    crew_data 크루%rowtype;
    
begin
    dbms_output.put_line('프로시저 시작');
    
    open c_crew;
    loop
        -- 크루장, 개설자를 등록할 크루를 fetch
        fetch c_crew into crew_data.크루ID, crew_data.크루명;
        exit when c_crew%NOTFOUND;
        
        -- 멤버들 중에서 아직 크루에 가입하지 않은 멤버를 임의로 뽑는다.
        select count(*)+1 into num_of_rows from (select * from 회원 where 가입크루 is null);
        dbms_output.put_line('num_of_rows : ' || num_of_rows);
        
        SELECT 회원ID, 거주지  into v_random_leader, v_leader_addr  FROM (SELECT 회원ID, 거주지, ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE) AS rn FROM 회원 WHERE 가입크루 IS NULL) WHERE rn = 1;
        -- 그 회원을 일단 이 크루에 가입시킨다. - 트리거가 작동하여 달린거리, 마일리지, 등급을 적용한다.
        update 회원 set 회원.가입크루 = crew_data.크루ID where 회원ID = v_random_leader;
        
        dbms_output.put_line('회원ID ' || v_random_leader);
        
        -- 이 크루의 활동지역을 개설자의 활동지역과 동기화한다. 
        update 크루 set 크루.활동지역 = FUNC_GET_LARGE_ADDR(v_leader_addr), 크루.개설자 = v_random_leader, 크루.크루장 = v_random_leader where 크루ID = crew_data.크루ID;
    end loop;
    close c_crew;
end;

-- 주소분리 함수 테스트
select FUNC_GET_LARGE_ADDR('경기도 수원시 금정구') from dual;

-- 크루 테이블 초기화 프로시저 실행
execute PROC_REGISTER_CREW_LEADER_INIT;


rollback;


-- 디버깅용 질의문들.
select * from 회원;
update 회원 set 가입크루 = null;
update 크루 set 인원수=0, 활동지역=null;
select * from 크루;
select count(*) from 회원 where 회원.가입크루 is null;

commit;